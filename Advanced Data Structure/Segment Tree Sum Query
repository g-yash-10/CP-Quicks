static int N = 200002;
    static int sgtmin[] = new int[4*N];
    static void build(int node, int st, int en, int arr[])	//call build(0, 0, n-1, arr)
    {
        if(st == en)
        {
            sgtmin[node] = arr[st];
            return;
        }
        int mid = ( st + en ) / 2;
        build(2 * node + 1, st, mid, arr);
         build(2 * node + 2, mid + 1, en, arr);
        sgtmin[node] =sgtmin[2 * node + 1] + sgtmin[2 * node + 2];
        
    }
    static int query(int node, int st, int en, int l, int r, int arr[])	//call query(0, 0, n-1, l, r, arr)
    {
        if(st > r || en < l)
        {
            return Integer.MAX_VALUE;
        }
        else if(l <= st && en <= r)
        {
            return sgtmin[node];
        }
        int mid = (st + en) / 2;
        int q1 = query(2*node + 1, st, mid, l, r, arr);
        int q2 = query(2*node + 2, mid + 1, en, l, r, arr);
        return q1 + q2;
    }
