static int N = 200002;
    static int sgtmin[] = new int[4*N];
    static void buildMin(int node, int st, int en, int arr[])
    {
        if(st == en)
        {
            sgtmin[node] = arr[st];
            return;
        }
        int mid = ( st + en ) / 2;
        buildMin(2 * node + 1, st, mid, arr);
         buildMin(2 * node + 2, mid + 1, en, arr);
        sgtmin[node] = Math.min(sgtmin[2 * node + 1], sgtmin[2 * node + 2]);
        
    }
    static int queryMin(int node, int st, int en, int l, int r, int arr[])
    {
        if(st > r || en < l)
        {
            return Integer.MAX_VALUE;
        }
        else if(l <= st && en <= r)
        {
            return sgtmin[node];
        }
        int mid = (st + en) / 2;
        int q1 = queryMin(2*node + 1, st, mid, l, r, arr);
        int q2 = queryMin(2*node + 2, mid + 1, en, l, r, arr);
        return Math.min(q1, q2);
    }
